apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service: redis
  name: redis
  namespace: n8n
spec:
  replicas: 1
  selector:
    matchLabels:
      service: redis
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        service: redis
    spec:
      containers:
        - name: redis
          image: redis:7-alpine
          ports:
            - containerPort: 6379
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          volumeMounts:
            - name: redis-data
              mountPath: /data
          # Health check
          livenessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: 5
            periodSeconds: 5
      restartPolicy: Always
      volumes:
        - name: redis-data
          persistentVolumeClaim:
            claimName: redis-claim0
---
apiVersion: v1
kind: Service
metadata:
  labels:
    service: redis
  name: redis-service
  namespace: n8n
spec:
  type: ClusterIP
  ports:
    - name: "6379"
      port: 6379
      targetPort: 6379
      protocol: TCP
  selector:
    service: redis

